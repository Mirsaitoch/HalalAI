//
//  ChatService.swift
//  HalalAI
//
//  Created by –ú–∏—Ä—Å–∞–∏—Ç –°–∞–±–∏—Ä–∑—è–Ω–æ–≤ on 25.10.2025.
//

import Foundation
import Combine

@MainActor
class ChatService: ObservableObject {
    static let shared = ChatService()
    
    @Published var messages: [ChatMessage] = []
    @Published var chatState: ChatState = .idle
    @Published var connectionState: ConnectionState = .connected
    
    private var cancellables = Set<AnyCancellable>()
    
    private init() {}
    
    // MARK: - Public Methods
    
    func sendMessage(_ text: String) {
        guard !text.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty else { return }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let userMessage = ChatMessage(role: .user, text: text)
        messages.append(userMessage)
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ø–µ—á–∞—Ç–∞–µ—Ç"
        chatState = .typing
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        Task {
            await simulateAIResponse(for: text)
        }
    }
    
    func retryLastMessage() {
        guard let lastUserMessage = messages.last(where: { $0.role == .user }) else { return }
        
        // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ AI (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if let lastAIMessage = messages.last, lastAIMessage.role == .assistant {
            messages.removeLast()
        }
        
        chatState = .typing
        
        Task {
            await simulateAIResponse(for: lastUserMessage.text)
        }
    }
    
    func clearChat() {
        messages.removeAll()
        chatState = .idle
    }
    
    // MARK: - Private Methods
    
    private func simulateAIResponse(for userText: String) async {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
        try? await Task.sleep(nanoseconds: 1_500_000_000) // 1.5 —Å–µ–∫—É–Ω–¥—ã
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        let response = generateAIResponse(for: userText)
        
        let aiMessage = ChatMessage(role: .assistant, text: response)
        messages.append(aiMessage)
        
        chatState = .idle
    }
    
    private func generateAIResponse(for userText: String) -> String {
        let lowercasedText = userText.lowercased()
        
        if lowercasedText.contains("–ø—Ä–∏–≤–µ—Ç") || lowercasedText.contains("—Å–∞–ª–∞–º") {
            return "–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º! üëã\n\n–Ø ‚Äî HalalAI, –≤–∞—à —Ö–∞–ª—è–ª—å-–ø–æ–º–æ—â–Ω–∏–∫. –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ —Ö–∞–ª—è–ª—å –ø—Ä–æ–¥—É–∫—Ç–∞—Ö, –±—Ä–µ–Ω–¥–∞—Ö –∏ –∏—Å–ª–∞–º—Å–∫–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö –ø–∏—Ç–∞–Ω–∏—è.\n\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
        } else if lowercasedText.contains("—Ö–∞–ª—è–ª—å") {
            return "–•–∞–ª—è–ª—å ‚Äî —ç—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ –≤ –∏—Å–ª–∞–º–µ. –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–∏—Ç–∞–Ω–∏—è —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏—Å–ª–∞–º—Å–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º:\n\n‚Ä¢ –ú—è—Å–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞—Ä–µ–∑–∞–Ω–æ –ø–æ –∏—Å–ª–∞–º—Å–∫–∏–º –ø—Ä–∞–≤–∏–ª–∞–º\n‚Ä¢ –ù–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∞–ª–∫–æ–≥–æ–ª—å –∏–ª–∏ —Å–≤–∏–Ω–∏–Ω—É\n‚Ä¢ –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏—Å–ª–∞–º—Å–∫–∏–º –Ω–æ—Ä–º–∞–º\n\n–ï—Å—Ç—å –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?"
        } else if lowercasedText.contains("–º—è—Å–æ") {
            return "–•–∞–ª—è–ª—å –º—è—Å–æ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:\n\n‚Ä¢ –ñ–∏–≤–æ—Ç–Ω–æ–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞—Ä–µ–∑–∞–Ω–æ –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω–æ–º\n‚Ä¢ –ü—Ä–∏ –∑–∞–±–æ–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è ¬´–ë–∏—Å–º–∏–ª–ª–∞—Ö¬ª\n‚Ä¢ –ö—Ä–æ–≤—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–ª–∏—Ç–∞\n‚Ä¢ –ñ–∏–≤–æ—Ç–Ω–æ–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–¥–æ—Ä–æ–≤—ã–º\n\n–ö–∞–∫–æ–µ –∏–º–µ–Ω–Ω–æ –º—è—Å–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
        } else if lowercasedText.contains("–º–æ–ª–æ—á–Ω") {
            return "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –æ–±—ã—á–Ω–æ —Ö–∞–ª—è–ª—å, –µ—Å–ª–∏:\n\n‚Ä¢ –ù–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –¥–æ–±–∞–≤–æ–∫\n‚Ä¢ –ù–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Å–≤–∏–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–∂–µ–ª–∞—Ç–∏–Ω)\n‚Ä¢ –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω—ã —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º —Å–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–æ—Ä–º\n\n–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–æ—Å—Ç–∞–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∂–µ–ª–∞—Ç–∏–Ω–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è."
        } else if lowercasedText.contains("–±—Ä–µ–Ω–¥") {
            return "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ö–∞–ª—è–ª—å –±—Ä–µ–Ω–¥—ã:\n\n‚Ä¢ **–ú—è—Å–æ**: ¬´–•–∞–ª—è–ª—å¬ª, ¬´–ê—Å-–°–∞–ª–∞–º¬ª\n‚Ä¢ **–ú–æ–ª–æ—á–Ω—ã–µ**: ¬´–ê–∫–±–∞—Ä—Å¬ª, ¬´–ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∏–Ω–æ¬ª\n‚Ä¢ **–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ**: ¬´–ë–∞—Ö–µ—Ç–ª–µ¬ª, ¬´–†–∞—Ö–∞—Ç¬ª\n\n–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Ö–∞–ª—è–ª—å –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ!"
        } else {
            return "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! ü§≤\n\n–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –≤–æ–ø—Ä–æ—Å–∞—Ö —Ö–∞–ª—è–ª—å –ø–∏—Ç–∞–Ω–∏—è. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å:\n\n‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ö–∞–ª—è–ª—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—Ä–µ–Ω–¥–∞—Ö\n‚Ä¢ –ò—Å–ª–∞–º—Å–∫–∏–º–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏ –ø–∏—Ç–∞–Ω–∏—è\n‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n\n–ó–∞–¥–∞–π—Ç–µ –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É!"
        }
    }
}
